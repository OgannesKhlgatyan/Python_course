# # Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# # Выдать без повторений в порядке возрастания все те числа, которые встречаются
# # в обоих наборах.
# # Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# # элементов второго множества. Затем пользователь вводит сами элементы
# # множеств.

# n = int(input('Ввести колличество элементов в первом множестве: '))
# m = int(input('Ввести колличество элементов во втором множестве: '))

# list1 = list()
# list2 = list()

# count = 1
# count2 = 1

# while count <= n:
#     element = input(f'Пожалуйста, введите элемент первого набора {count}: ')
#     list1.append(element)
#     count +=1

# while count2 <= m:
#     element = input(f'Пожалуйста, введите элемент второго набора{count2}: ')
#     list2.append(element)
#     count2 +=1

# list_obsh = list()

# for i in list1:
#     for j in list2:
#         if i ==j:
#             list_obsh.append(i)

# mnozh = set(list_obsh)
# result = list(mnozh)
# result.sort()

# print(result)

# # Задача 24
# # В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой
# # грядке, причем кусты высажены только по окружности. Таким образом, у каждого
# # куста есть ровно два соседних. Всего на грядке растет N кустов.
# # Семинар 4 2
# # Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# # выросло различное число ягод – на i-ом кусте выросло ai ягод.
# # В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# # Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# # Собирающий модуль за один заход, находясь непосредственно перед некоторым
# # кустом, собирает ягоды с этого куста и с двух соседних с ним.
# # Напишите программу для нахождения максимального числа ягод, которое может
# # собрать за один заход собирающий модуль, находясь перед некоторым кустом
# # заданной во входном файле грядки.

n = int(input())
arr = list()
for i in range(n):
    x = int(input())
    arr.append(x)

arr_count = list()
for i in range(len(arr)-1):
    arr_count.append(arr(i-1)+arr(i)+arr(i+1))
    arr_count.append(arr(-2)+arr(-1)+arr(0))
print(max(arr_count))